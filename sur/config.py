import dataclasses
from typing import Mapping, Union

from github3 import GitHub
from github3.git import Reference
from github3.repos import Repository, ShortRepository
from github3.repos.branch import Branch
from pygit2 import Signature

GHRepository = Union[Repository, ShortRepository]


@dataclasses.dataclass(repr=True, frozen=True)
class Config:
    github: GitHub
    source_repository: GHRepository
    ref: Reference
    targets: Mapping[GHRepository, Branch]
    committer: Signature

    # Available variables in format strings:
    #   submodule_repository: github3.repos.Repository
    #   submodule_repository.name: str       # e.g. libplanet
    #   submodule_repository.full_name: str  # e.g. planetarium/libplanet
    #   submodule_ref: github3.git.Reference
    #   submodule_ref.ref: str               # e.g., refs/tags/1.2.3
    #   submodule_ref_type: Optional[str]    # e.g., tag
    #   submodule_ref_name: str              # e.g., 1.2.3
    #   submodule_commit: github3.git.GitObject
    #   submodule_commit.sha: str
    pr_title_format: str = dataclasses.field(
        default="Update {submodule_repository.name} to {submodule_ref_name}"
    )
    pr_description_format: str = dataclasses.field(
        default="""\
*This pull request was automatically generated by Submodule Updater.*

It updates the submodule referring to \
[*{submodule_repository.name}*]({submodule_repository.html_url}) to \
{submodule_ref_type} *{submodule_ref_name}* \
({submodule_repository.full_name}@{submodule_commit.sha}).
"""
    )
